"""
B. Пограничный контроль
Язык	Ограничение времени	Ограничение памяти	Ввод	Вывод
Все языки	0.2 секунды	64Mb	стандартный ввод или input.txt	стандартный вывод или output.txt
Mono C# 5.2.0	0.4 секунды	64Mb
Oracle Java 8	0.4 секунды	64Mb
OpenJDK Java 11	0.4 секунды	64Mb
Представьте, что вы работаете пограничником и постоянно проверяете документы людей по записи из базы. При этом
допустима ситуация, когда имя человека в базе отличается от имени в паспорте на одну замену, одно удаление или одну
вставку символа. Если один вариант имени может быть получен из другого удалением одного символа, то человека пропустят
через границу. А вот если есть какое-либо второе изменение, то человек грустно поедет домой или в посольство.

Например, если первый вариант —– это «Лена», а второй — «Лера», то девушку пропустят. Также человека пропустят, если в
базе записано «Коля», а в паспорте — «оля».

Однако вариант, когда в базе числится «Иннокентий», а в паспорте написано «ннакентий», уже не сработает. Не пропустят
также человека, у которого в паспорте записан «Иинннокентий», а вот «Инннокентий» спокойно пересечёт границу.

Напишите программу, которая сравнивает имя в базе с именем в паспорте и решает, пропускать человека или нет. В случае
равенства двух строк — путешественника, естественно, пропускают.

Формат ввода
В первой строке дано имя из паспорта.

Во второй строке —- имя из базы.

Обе строки состоят из строчных букв английского алфавита. Размер каждой строки не превосходит 100 000 символов.

Формат вывода
Выведите «OK», если человека пропустят, или «FAIL» в противном случае.
"""

import sys


def main():
    a = sys.stdin.readline().rstrip()
    b = sys.stdin.readline().rstrip()

    l_a = len(a)
    l_b = len(b)

    p_a = 0
    p_b = 0

    errors_count = 0

    while True:
        if l_a == p_a + 1:
            break
        if l_b == p_b + 1:
            break

        if a[p_a] == b[p_b]:
            p_a += 1
            p_b += 1
            continue
        else:
            errors_count += 1

            if a[p_a + 1] == b[p_b + 1]:
                p_a += 1
                p_b += 1
                continue
            if a[p_a + 1] == b[p_b]:
                p_a += 1
                continue
            if b[p_b + 1] == a[p_a]:
                p_b += 1
                continue
            errors_count += 1
            break

    errors_count += (l_a - p_a - 1)
    errors_count += (l_b - p_b - 1)

    if errors_count < 2:
        print('OK')
    else:
        print('FAIL')


if __name__ == '__main__':
    main()
