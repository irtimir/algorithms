"""
Алла захотела, чтобы у неё под окном были узкие клумбы с тюльпанам. На схеме земельного участка клумбы
обозначаются просто горизонтальными отрезками, лежащими на одной прямой. Для ландшафтных работ было нанято
n садовников. Каждый из них обрабатывал какой-то отрезок на схеме. Процесс был организован не очень хорошо,
иногда один и тот же отрезок или его часть могли быть обработаны сразу несколькими садовниками.
Таким образом, отрезки, обрабатываемые двумя разными садовниками, сливаются в один. Непрерывный обработанный
отрезок затем станет клумбой. Нужно определить границы будущих клумб.

Рассмотрим примеры.

Пример 1:
Два отрезка [7, 8] сливаются в один, но потом их накрывает отрезок [6, 10]. Таким образом,
имеем две клумбы с координатами [2,3] и [6,10].

Пример 2
Отрезки [2,3], [3, 4] и [3,4] сольются в один отрезок [2,4]. Отрезок [5,6] ни с кем не
объединяется, добавляем его в ответ.

Формат ввода
В первой строке задано количество садовников n. Число садовников не превосходит 100 000.

В следующих n строках через пробел записаны координаты клумб в формате: start end,
где start —– координата начала, end —– координата конца. Оба числа целые, неотрицательные и не
превосходят 107. start строго меньше, чем end.
"""

import sys


def merge_slices(seq):
    merged = []
    last_idx = None

    for slice_ in seq:
        if last_idx is None:
            last_idx = 0
            merged.append(slice_)
        else:
            elem = merged[last_idx]

            if slice_[0] > elem[1]:
                last_idx += 1
                merged.append(slice_)
            elif slice_[0] <= elem[1] < slice_[1]:
                elem[1] = slice_[1]
                merged[last_idx] = elem
    return merged


def main():
    n = int(sys.stdin.readline().rstrip())
    seq = []

    for _ in range(n):
        seq.append(list(map(int, sys.stdin.readline().rstrip().split())))

    seq.sort()
    print('\n'.join(map(lambda i: ' '.join(map(str, i)), merge_slices(seq))))


if __name__ == '__main__':
    main()
